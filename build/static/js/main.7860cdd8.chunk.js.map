{"version":3,"sources":["assets/scan.svg","assets/close.svg","assets/more.svg","assets/menu.svg","assets/phone.svg","assets/marker.svg","assets/remove.svg","assets/send.svg","util/i18n.js","components/common/Layout.jsx","components/common/Customer.jsx","components/common/Loader.jsx","components/pages/Settings.jsx","util/config.js","components/pages/Scan.jsx","components/pages/Generate.jsx","components/pages/Success.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","i18n","use","LanguageDetector","init","resources","de","translations","AppTitle","Start","Street","ZIP","City","Phone","remove","Success","Settings","Add","Customer","Customers","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","Layout","children","useState","menuOpen","setMenuOpen","id","t","onClick","src","menu","alt","div","transition","ease","duration","initial","x","animate","exit","close","className","to","localStorage","removeItem","window","location","reload","index","data","moreVisible","setMoreVisible","e","firstname","lastname","more","marker","street","zip","city","phone","Loader","version","xmlns","y","viewBox","enableBackground","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","x1","y1","x2","y2","transform","attributeName","dur","type","from","repeatCount","history","useHistory","getItem","email","setEmail","custom","setCustom","JSON","parse","customValues","setCustomValues","htmlFor","value","name","onChange","target","map","idx","key","values","filter","img","i","removeCustomValue","variants","hidden","opacity","visible","setItem","stringify","push","scan","config","mail","title","Scan","valuesFromStorage","setValuesFromStorage","setValues","scanning","setScanning","customers","setCustomers","loading","setLoading","removeCustomer","val","useEffect","forEach","customer","delay","onError","alert","onScan","addCustomer","style","width","length","valueString","customerString","Object","keys","date","Date","toLocaleDateString","toLocaleTimeString","axios","post","then","response","console","log","catch","error","sendData","send","Generate","setData","errors","setErrors","generated","setGenerated","handleChange","checkError","field","find","scale","size","onSubmit","preventDefault","errorArray","generateCode","autoComplete","marginRight","flexGrow","App","I18nextProvider","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7860cdd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scan.e159645e.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.279e71ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/more.9138e3d7.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.5b81a5eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.8e43a4b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker.28c0416e.svg\";","module.exports = __webpack_public_path__ + \"static/media/remove.947d00bd.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.901a5971.svg\";","import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(LanguageDetector).init({\r\n  resources: {\r\n    de: {\r\n      translations: {\r\n        AppTitle: \"QR Code Teilnehmererfassung\",\r\n        \"Clear data\": \"Zurücksetzen\",\r\n        \"Generate code\": \"Code generieren\",\r\n        \"Create new data\": \"Neue Erfassung\",\r\n        \"Save the Image or make a screenshot to make the Code reusable.\":\r\n          \"Speicher das Bild oder mache einen Screenshot um den Code weiter zu benutzen.\",\r\n        \"Fill out the form\": \"Füll das Formular aus\",\r\n        \"First name\": \"Vorname\",\r\n        \"Last name\": \"Nachname\",\r\n        Start: \"Start\",\r\n        Street: \"Straße\",\r\n        ZIP: \"PLZ\",\r\n        City: \"Stadt\",\r\n        Phone: \"Telefon\",\r\n        \"Generate another code\": \"Weiteren Code generieren\",\r\n        \"Add customer\": \"Kunde hinzufügen\",\r\n        \"Add customers\": \"Kunden hinzufügen\",\r\n        \"Send summary\": \"Zusammenfassung senden\",\r\n        remove: \"entfernen\",\r\n        Success: \"Erfolgreich\",\r\n        \"Your summary has succesfully been send to\":\r\n          \"Deine Zusammenfassung wurde erfolgreich versandt an\",\r\n        \"Scan again\": \"Nochmal scannen\",\r\n        Settings: \"Einstellungen\",\r\n        \"E-mail adress\": \"E-Mail-Adresse\",\r\n        \"Custom fields\": \"Zusatzfelder\",\r\n        Add: \"+\",\r\n        \"Start scanning\": \"Scannen starten\",\r\n        Customer: \"Kunde\",\r\n        Customers: \"Kunden\",\r\n        \"New data has been submitted on\": \"Neuer Eintrag wurde gemacht am\"\r\n      }\r\n    }\r\n  },\r\n  fallbackLng: \"en\",\r\n  debug: true,\r\n  ns: [\"translations\"],\r\n  defaultNS: \"translations\",\r\n  keySeparator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeparator: \",\"\r\n  },\r\n\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nexport default i18n;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport i18n from \"../../util/i18n\";\r\n\r\nimport menu from \"../../assets/menu.svg\";\r\nimport close from \"../../assets/close.svg\";\r\n\r\nexport default function Layout({ children }) {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  function doLogout() {\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"customValues\");\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    <div id=\"Layout\">\r\n      <div id=\"Header\">\r\n        {i18n.t(\"AppTitle\")}\r\n        <div id=\"MenuButton\" onClick={() => setMenuOpen(true)}>\r\n          <img src={menu} alt=\"Menu\" />\r\n        </div>\r\n      </div>\r\n      <AnimatePresence>\r\n        {menuOpen && (\r\n          <motion.div\r\n            transition={{ ease: \"easeOut\", duration: 0.2 }}\r\n            initial={{ x: \"100%\" }}\r\n            animate={{ x: 0 }}\r\n            exit={{ x: \"100%\" }}\r\n            id=\"Menu\"\r\n          >\r\n            <img\r\n              src={close}\r\n              onClick={() => setMenuOpen(false)}\r\n              alt=\"close\"\r\n              className=\"close\"\r\n            />\r\n            <ul>\r\n              <li>\r\n                <Link onClick={() => setMenuOpen(false)} to=\"/\">\r\n                  {i18n.t(\"Start\")}\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link onClick={() => setMenuOpen(false)} to=\"/settings\">\r\n                  {i18n.t(\"Settings\")}\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link onClick={() => setMenuOpen(false)} to=\"/scan\">\r\n                  {i18n.t(\"Create new data\")}\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link onClick={() => setMenuOpen(false)} to=\"/generate\">\r\n                  {i18n.t(\"Generate code\")}\r\n                </Link>\r\n              </li>\r\n\r\n              <li onClick={doLogout}> {i18n.t(\"Clear data\")}</li>\r\n            </ul>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n      <div id=\"Content\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport i18n from \"../../util/i18n\";\r\n\r\nimport more from \"../../assets/more.svg\";\r\nimport phone from \"../../assets/phone.svg\";\r\nimport marker from \"../../assets/marker.svg\";\r\n\r\nexport default function Customer({ index, data, remove }) {\r\n  const [moreVisible, setMoreVisible] = useState(false);\r\n\r\n  function showHide() {\r\n    if (moreVisible) {\r\n      setMoreVisible(false);\r\n    } else {\r\n      setMoreVisible(true);\r\n    }\r\n  }\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ x: \"100%\" }}\r\n        animate={{ x: 0 }}\r\n        exit={{ x: \"100%\" }}\r\n        className=\"customer\"\r\n        onClick={e => showHide()}\r\n      >\r\n        <div className=\"head\">\r\n          {index + 1}. {data.firstname} {data.lastname}\r\n          <div className=\"more\">\r\n            {moreVisible && <img src={more} alt=\"more\" className=\"less-img\" />}\r\n            {!moreVisible && <img src={more} alt=\"more\" className=\"more-img\" />}\r\n          </div>\r\n          {moreVisible && (\r\n            <div className=\"content\">\r\n              <div className=\"adress\">\r\n                <img src={marker} alt=\"Marker\" />\r\n                <div>\r\n                  {data.street}\r\n                  <br />\r\n                  {data.zip} {data.city}\r\n                </div>\r\n              </div>\r\n              <div className=\"phone\">\r\n                <img src={phone} alt=\"Marker\" />\r\n                <div>{data.phone}</div>\r\n              </div>\r\n              <div className=\"remove\" onClick={e => remove(index)}>\r\n                {i18n.t(\"remove\")}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loader() {\r\n\treturn (\r\n\t\t<div id=\"Loader\">\r\n\t\t\t<svg\r\n\t\t\t\tversion=\"1.1\"\r\n\t\t\t\tid=\"L2\"\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\tx=\"0px\"\r\n\t\t\t\ty=\"0px\"\r\n\t\t\t\tviewBox=\"0 0 100 100\"\r\n\t\t\t\tenableBackground=\"new 0 0 100 100\"\r\n\t\t\t>\r\n\t\t\t\t<circle\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstroke=\"#000\"\r\n\t\t\t\t\tstrokeWidth=\"4\"\r\n\t\t\t\t\tstrokeMiterlimit=\"10\"\r\n\t\t\t\t\tcx=\"50\"\r\n\t\t\t\t\tcy=\"50\"\r\n\t\t\t\t\tr=\"48\"\r\n\t\t\t\t></circle>\r\n\t\t\t\t<line\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstroke=\"#000\"\r\n\t\t\t\t\tstrokeWidth=\"4\"\r\n\t\t\t\t\tstrokeMiterlimit=\"10\"\r\n\t\t\t\t\tx1=\"50\"\r\n\t\t\t\t\ty1=\"50\"\r\n\t\t\t\t\tx2=\"85\"\r\n\t\t\t\t\ty2=\"50.5\"\r\n\t\t\t\t\ttransform=\"rotate(292.226 50 50)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<animateTransform\r\n\t\t\t\t\t\tattributeName=\"transform\"\r\n\t\t\t\t\t\tdur=\"2s\"\r\n\t\t\t\t\t\ttype=\"rotate\"\r\n\t\t\t\t\t\tfrom=\"0 50 50\"\r\n\t\t\t\t\t\tto=\"360 50 50\"\r\n\t\t\t\t\t\trepeatCount=\"indefinite\"\r\n\t\t\t\t\t></animateTransform>\r\n\t\t\t\t</line>\r\n\t\t\t\t<line\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tstrokeLinecap=\"round\"\r\n\t\t\t\t\tstroke=\"#000\"\r\n\t\t\t\t\tstrokeWidth=\"4\"\r\n\t\t\t\t\tstrokeMiterlimit=\"10\"\r\n\t\t\t\t\tx1=\"50\"\r\n\t\t\t\t\ty1=\"50\"\r\n\t\t\t\t\tx2=\"49.5\"\r\n\t\t\t\t\ty2=\"74\"\r\n\t\t\t\t\ttransform=\"rotate(182.963 50 50)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<animateTransform\r\n\t\t\t\t\t\tattributeName=\"transform\"\r\n\t\t\t\t\t\tdur=\"15s\"\r\n\t\t\t\t\t\ttype=\"rotate\"\r\n\t\t\t\t\t\tfrom=\"0 50 50\"\r\n\t\t\t\t\t\tto=\"360 50 50\"\r\n\t\t\t\t\t\trepeatCount=\"indefinite\"\r\n\t\t\t\t\t></animateTransform>\r\n\t\t\t\t</line>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport i18n from \"../../util/i18n\";\r\n\r\nimport scan from \"../../assets/scan.svg\";\r\nimport remove from \"../../assets/remove.svg\";\r\n\r\nexport default function Settings() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(localStorage.getItem(\"email\") || \"\");\r\n  const [custom, setCustom] = useState(\"\");\r\n  const [customValues, setCustomValues] = useState(\r\n    JSON.parse(localStorage.getItem(\"customValues\")) || []\r\n  );\r\n\r\n  const item = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n  };\r\n\r\n  function addCustomValue() {\r\n    if (!custom) return;\r\n    setCustomValues([...customValues, custom]);\r\n    setCustom(\"\");\r\n  }\r\n  function removeCustomValue(idx) {\r\n    setCustomValues(values => values.filter((img, i) => i !== idx));\r\n  }\r\n\r\n  function startScanning() {\r\n    localStorage.setItem(\"email\", email);\r\n    localStorage.setItem(\"customValues\", JSON.stringify(customValues));\r\n    history.push(\"/scan\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"Settings\" className=\"container\">\r\n      <h1>{i18n.t(\"Settings\")}</h1>\r\n      <div className=\"form\">\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"Email\">{i18n.t(\"E-mail adress\")}</label>\r\n          <input\r\n            value={email}\r\n            id=\"Email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"CustomFields\">{i18n.t(\"Custom fields\")}</label>\r\n          <div className=\"flex\">\r\n            <input\r\n              value={custom}\r\n              id=\"CustomFields\"\r\n              type=\"text\"\r\n              name=\"custom-fields\"\r\n              onChange={e => setCustom(e.target.value)}\r\n            />\r\n            <button onClick={() => addCustomValue()} className=\"btn add\">\r\n              {i18n.t(\"Add\")}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"custom-values\">\r\n          <AnimatePresence>\r\n            {customValues &&\r\n              customValues.map((value, idx) => {\r\n                return (\r\n                  <motion.div\r\n                    key={idx}\r\n                    initial={{ x: \"100%\" }}\r\n                    animate={{ x: 0 }}\r\n                    exit={{ x: \"100%\" }}\r\n                    className=\"custom-value\"\r\n                  >\r\n                    {value}\r\n                    <div\r\n                      className=\"remove\"\r\n                      onClick={() => removeCustomValue(idx)}\r\n                    >\r\n                      <img src={remove} alt=\"remove\" />\r\n                    </div>\r\n                  </motion.div>\r\n                );\r\n              })}\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n      {email && (\r\n        <motion.div\r\n          className=\"item\"\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={item}\r\n        >\r\n          <button onClick={startScanning} className=\"btn bottom\">\r\n            <img src={scan} alt=\"scan\" />\r\n            {i18n.t(\"Start scanning\")}\r\n          </button>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","const config = {\r\n  mail: \"https://mail.westhofen.me/mail.php\",\r\n  title: \"QR code participation system\"\r\n};\r\nexport default config;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport axios from \"axios\";\r\nimport i18n from \"../../util/i18n\";\r\n\r\nimport { config } from \"../../util\";\r\nimport { Customer, Loader } from \"../common\";\r\n\r\nimport scan from \"../../assets/scan.svg\";\r\nimport close from \"../../assets/close.svg\";\r\nimport send from \"../../assets/send.svg\";\r\n\r\nexport default function Scan() {\r\n  const history = useHistory();\r\n  const [valuesFromStorage, setValuesFromStorage] = useState([]);\r\n  const [values, setValues] = useState({});\r\n  const [scanning, setScanning] = useState(false);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const customValues = JSON.parse(localStorage.getItem(\"customValues\"));\r\n    setValuesFromStorage(customValues);\r\n    if (!customValues) history.push(\"/\");\r\n    customValues &&\r\n      customValues.forEach(value => {\r\n        setValues(values => ({ ...values, [value]: \"\" }));\r\n      });\r\n  }, [history]);\r\n\r\n  function setCustomValues(e) {\r\n    const target = e.target;\r\n    setValues(values => ({ ...values, [target.name]: target.value }));\r\n  }\r\n  function handleScan(data) {\r\n    if (data) {\r\n      const dataObject = JSON.parse(data);\r\n      addCustomer(dataObject);\r\n    }\r\n  }\r\n\r\n  function handleScanError() {\r\n    alert(\"Error while scanning.\");\r\n  }\r\n\r\n  function addCustomer(data) {\r\n    if (!data) return;\r\n    setCustomers([...customers, data]);\r\n    setScanning(false);\r\n  }\r\n\r\n  function removeCustomer(idx) {\r\n    setCustomers(values => values.filter((val, i) => i !== idx));\r\n  }\r\n\r\n  function sendData() {\r\n    setLoading(true);\r\n    let valueString =\r\n      \"<strong>\" + i18n.t(\"Custom fields\") + \": </strong><br />\";\r\n    let customerString = \"<strong>\" + i18n.t(\"Customers\") + \": </strong><br />\";\r\n    Object.keys(values).forEach(function(key) {\r\n      valueString += key + \": \" + values[key] + \"<br />\";\r\n    });\r\n    customers.forEach((customer, idx) => {\r\n      customerString += \"\" + i18n.t(\"Customer\") + \" #\" + (idx + 1) + \"<br />\";\r\n      customerString +=\r\n        i18n.t(\"First name\") + \": \" + customer.firstname + \"<br />\";\r\n      customerString +=\r\n        i18n.t(\"Last name\") + \": \" + customer.lastname + \"<br />\";\r\n      customerString += i18n.t(\"Street\") + \":\" + customer.street + \"<br />\";\r\n      customerString += i18n.t(\"ZIP\") + \":\" + customer.zip + \"<br />\";\r\n      customerString += i18n.t(\"City\") + \": \" + customer.city + \"<br />\";\r\n      customerString +=\r\n        i18n.t(\"Phone\") + \": \" + customer.phone + \"<br /><br />\";\r\n    });\r\n    const date = new Date();\r\n    let data = {\r\n      email: localStorage.getItem(\"email\"),\r\n      customers: customerString,\r\n      values: valueString,\r\n      title:\r\n        i18n.t(\"New data has been submitted on\") +\r\n        \" \" +\r\n        date.toLocaleDateString() +\r\n        \" | \" +\r\n        date.toLocaleTimeString(),\r\n      date: date.toLocaleDateString() + \" | \" + date.toLocaleTimeString()\r\n    };\r\n    axios\r\n      .post(config.mail, { data })\r\n      .then(response => {\r\n        console.log(response);\r\n        setLoading(false);\r\n        history.push(\"/success\");\r\n      })\r\n      .catch(error => {\r\n        setLoading(false);\r\n        if (error.response) {\r\n          alert(error.response.data);\r\n        } else {\r\n          alert(\"Fehler aufgetreten\");\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <div id=\"Scan\" className=\"container\">\r\n      {loading && <Loader />}\r\n      <h1> {i18n.t(\"Add customers\")}</h1>\r\n      <div className=\"form\">\r\n        {valuesFromStorage &&\r\n          valuesFromStorage.map((value, idx) => (\r\n            <div key={idx} className=\"input-group\">\r\n              <label>{value}</label>\r\n              <input\r\n                name={value}\r\n                type=\"text\"\r\n                onChange={e => setCustomValues(e)}\r\n                value={values[value]}\r\n              />\r\n            </div>\r\n          ))}\r\n        <div className=\"customers\">\r\n          {customers &&\r\n            customers.map((customer, idx) => (\r\n              <Customer\r\n                key={idx}\r\n                data={customer}\r\n                index={idx}\r\n                remove={removeCustomer}\r\n              />\r\n            ))}\r\n        </div>\r\n        <button className=\"btn\" onClick={() => setScanning(true)}>\r\n          <img src={scan} alt=\"scan\" />\r\n          {i18n.t(\"Add customer\")}\r\n        </button>{\" \"}\r\n        <AnimatePresence>\r\n          {scanning && (\r\n            <motion.div\r\n              initial={{ y: \"100%\" }}\r\n              animate={{ y: 0 }}\r\n              exit={{ y: \"100%\" }}\r\n              className=\"qr-wrapper\"\r\n            >\r\n              <QrReader\r\n                delay={1000}\r\n                onError={handleScanError}\r\n                onScan={handleScan}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n\r\n              <img\r\n                src={close}\r\n                onClick={() => setScanning(false)}\r\n                className=\"close\"\r\n                alt=\"close\"\r\n              />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      {customers.length ? (\r\n        <button onClick={e => sendData()} className=\"btn bottom\">\r\n          <img src={send} alt=\"send\" />\r\n          {i18n.t(\"Send summary\")}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport i18n from \"../../util/i18n\";\r\n\r\nimport scan from \"../../assets/scan.svg\";\r\n\r\nexport default function Generate() {\r\n  const [data, setData] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    street: \"\",\r\n    zip: \"\",\r\n    city: \"\",\r\n    phone: \"\"\r\n  });\r\n\r\n  const [errors, setErrors] = useState([]);\r\n  useEffect(() => {}, [errors]);\r\n  const [generated, setGenerated] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n    if (value) {\r\n      setErrors(errors => errors.filter(error => error !== name));\r\n    }\r\n  }\r\n\r\n  function generateCode(e) {\r\n    e.preventDefault();\r\n    const errorArray = [];\r\n    Object.keys(data).forEach(field => {\r\n      if (!data[field] || data[field] === \"\") errorArray.push(field);\r\n    });\r\n    setErrors(errorArray);\r\n    console.log(errorArray);\r\n    if (errorArray.length > 0) {\r\n      return;\r\n    }\r\n    setGenerated(true);\r\n  }\r\n\r\n  function newCode() {\r\n    setGenerated(false);\r\n    setData({\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      street: \"\",\r\n      zip: \"\",\r\n      city: \"\",\r\n      phone: \"\"\r\n    });\r\n  }\r\n\r\n  function checkError(field) {\r\n    if (errors && errors.find(error => error === field)) {\r\n      return \"error\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"Generate\" className=\"container\">\r\n      <AnimatePresence>\r\n        {generated && (\r\n          <motion.div\r\n            initial={{ scale: 0 }}\r\n            animate={{ scale: 1 }}\r\n            exit={{ scale: 0 }}\r\n            className=\"generate-wrapper\"\r\n          >\r\n            <QRCode size={200} value={JSON.stringify(data)} />\r\n            <div>\r\n              {i18n.t(\r\n                \"Save the Image or make a screenshot to make the Code reusable.\"\r\n              )}\r\n            </div>\r\n            <button onClick={e => newCode()} className=\"btn bottom\">\r\n              <img src={scan} alt=\"scan\" />\r\n              {i18n.t(\"Generate another code\")}\r\n            </button>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n      <h1>{i18n.t(\"Fill out the form\")}</h1>\r\n      <div className=\"form\">\r\n        <form onSubmit={e => generateCode(e)} autoComplete=\"on\">\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"Firstname\">{i18n.t(\"First name\")}</label>\r\n            <input\r\n              value={data.firstname}\r\n              id=\"Firstname\"\r\n              autoComplete=\"given-name\"\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              className={checkError(\"firstname\")}\r\n              onChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"Lastname\">{i18n.t(\"Last name\")}</label>\r\n            <input\r\n              value={data.lastname}\r\n              autoComplete=\"family-name\"\r\n              id=\"Lastname\"\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              className={checkError(\"lastname\")}\r\n              onChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"Street\">{i18n.t(\"Street\")}</label>\r\n            <input\r\n              value={data.street}\r\n              id=\"Street\"\r\n              type=\"text\"\r\n              name=\"street\"\r\n              className={checkError(\"street\")}\r\n              onChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"flex\">\r\n            <div\r\n              className=\"input-group\"\r\n              style={{ width: \"100px\", marginRight: \"1rem\" }}\r\n            >\r\n              <label htmlFor=\"zip\">{i18n.t(\"ZIP\")}</label>\r\n              <input\r\n                value={data.zip}\r\n                id=\"zip\"\r\n                type=\"number\"\r\n                name=\"zip\"\r\n                className={checkError(\"zip\")}\r\n                onChange={e => handleChange(e)}\r\n                autoComplete=\"postal-code\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group\" style={{ flexGrow: 2 }}>\r\n              <label htmlFor=\"City\">{i18n.t(\"City\")}</label>\r\n              <input\r\n                value={data.city}\r\n                id=\"City\"\r\n                type=\"text\"\r\n                name=\"city\"\r\n                className={checkError(\"city\")}\r\n                onChange={e => handleChange(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label htmlFor=\"Phone\">{i18n.t(\"Phone\")}</label>\r\n            <input\r\n              value={data.phone}\r\n              id=\"Phone\"\r\n              type=\"tel\"\r\n              autoComplete=\"tel\"\r\n              name=\"phone\"\r\n              className={checkError(\"phone\")}\r\n              onChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn bottom\">\r\n            <img src={scan} alt=\"scan\" />\r\n            {i18n.t(\"Generate code\")}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport i18n from '../../util/i18n';\r\n\r\nimport scan from '../../assets/scan.svg';\r\n\r\nexport default function Success() {\r\n\treturn (\r\n\t\t<div id=\"Success\" className=\"container\">\r\n\t\t\t<h1>{i18n.t('Success')}!</h1>\r\n\t\t\t<div>\r\n\t\t\t\t{i18n.t('Your summary has succesfully been send to')}{' '}\r\n\t\t\t\t<span className=\"email\">{localStorage.getItem('email')}</span>\r\n\t\t\t</div>\r\n\t\t\t<Link to=\"/scan\" className=\"btn bottom\">\r\n\t\t\t\t<img src={scan} alt=\"scan\" />\r\n\t\t\t\t{i18n.t('Scan again')}\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"./util/i18n\";\r\nimport { Layout } from \"./components/common\";\r\nimport { Settings, Scan, Generate, Success } from \"./components/pages\";\r\n\r\nfunction App() {\r\n  const email = localStorage.getItem(\"email\");\r\n  return (\r\n    <I18nextProvider i18n={i18n}>\r\n      <BrowserRouter>\r\n        <Layout>\r\n          <Switch>\r\n            <Route path=\"/success\" component={Success} />\r\n            <Route path=\"/scan\" component={Scan} />\r\n            <Route path=\"/generate\" component={Generate} />\r\n            <Route path=\"/settings\" component={Settings} />\r\n            {email && <Route path=\"/\" component={Scan} />}\r\n            <Route path=\"/\" component={Settings} />\r\n          </Switch>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </I18nextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}